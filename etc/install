#!/bin/bash

if test "$DOTPATH" = ""; then
  DOTPATH=~/dotfiles; export DOTPATH
fi

is_installed() {
  type "$1" > /dev/null 2>&1
  return $?
}

# print_(header|error|warning|done) is based on @b4b4r07's dotfiles.
print_header() {
  printf " \033[37;1m%s\033[m\n" "$*"
}

print_error() {
  printf " \033[31m%s\033[m\n" "✖ $*" 1>&2
}

print_warning() {
  printf " \033[31m%s\033[m\n" "$*"
}

print_done() {
  printf " \033[37;1m%s\033[m...\033[32mOK\033[m\n" "✔ $*"
}

print_info() {
  printf " \033[36m%s\033[m\n" "$*"
}

die() {
  exit 1
}

dotfiles_download() {
  print_header "Downloading dotfiles from GitHub..."
  if is_installed "git"; then
    git clone https://github.com/fuyuno/dotfiles.git "$DOTPATH"
  elif is_installed "curl" || is_installed "wget" ; then
    if is_installed "curl" ; then
      curl -L -O https://github.com/fuyuno/dotfiles/archive/master.tar.gz
    else
      wget -O - https://github.com/fuyuno/dotfiles/archive/master.tar.gz
    fi
    tar xvf master.tar.gz
    if [ ! -d "dotfiles-master" ]; then
      print_error "dotfiles-master is not found"
      die 
    fi 
    mv "dotfiles-master" "$DOTPATH"
  else
    print_error "curl, wget or git required."
    die
  fi
  print_done "Download"
}

dotfiles_install() {
  print_header "Install dotfiles..."
  bash "$DOTPATH"/etc/init/init.sh
  print_done "Install"
}

dotfiles_link() {
  print_header "Linking .??* files..."
  bash "$DOTPATH"/etc/post/linker
  print_done "Link" 
}

while getopts dl OPT
do
  case $OPT in 
    d)
      # Deploy task
      LINKER=1
      ;;
    l)
      # Library (Called by other scripts)
      LIBRARY=1
      ;;
  esac
done

if [ "$LINKER" = 1 ]; then
  dotfiles_link
  return 
fi

if [ "$LIBRARY" = 1 ]; then
  return
fi

dotfiles_download
dotfiles_install
dotfiles_link
